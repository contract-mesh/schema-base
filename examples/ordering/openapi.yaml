openapi: 3.0.1
info:
  title: eShopOnContainers - Ordering HTTP API
  description: The Ordering Service HTTP API
paths:
  "/v1/orders/cancel":
    put:
      tags:
      - Orders
      parameters:
      - name: x-requestid
        in: header
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CancelOrderCommand"
          application/json:
            schema:
              "$ref": "#/components/schemas/CancelOrderCommand"
          text/json:
            schema:
              "$ref": "#/components/schemas/CancelOrderCommand"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CancelOrderCommand"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - orderingapi
  "/v1/orders/ship":
    put:
      tags:
      - Orders
      parameters:
      - name: x-requestid
        in: header
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ShipOrderCommand"
          application/json:
            schema:
              "$ref": "#/components/schemas/ShipOrderCommand"
          text/json:
            schema:
              "$ref": "#/components/schemas/ShipOrderCommand"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ShipOrderCommand"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - orderingapi
  "/v1/orders/{orderId}":
    get:
      tags:
      - Orders
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Order"
            application/json:
              schema:
                "$ref": "#/components/schemas/Order"
            text/json:
              schema:
                "$ref": "#/components/schemas/Order"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
      security:
        - oauth2:
          - orderingapi
  "/v1/orders":
    get:
      tags:
      - Orders
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderSummary"
                nullable: true
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderSummary"
                nullable: true
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderSummary"
                nullable: true
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - orderingapi
  "/v1/orders/cardtypes":
    get:
      tags:
      - Orders
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CardType"
                nullable: true
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CardType"
                nullable: true
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CardType"
                nullable: true
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - orderingapi
  "/v1/orders/draft":
    post:
      tags:
      - Orders
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CreateOrderDraftCommand"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrderDraftCommand"
          text/json:
            schema:
              "$ref": "#/components/schemas/CreateOrderDraftCommand"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CreateOrderDraftCommand"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/OrderDraftDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderDraftDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/OrderDraftDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - orderingapi
components:
  schemas:
    CancelOrderCommand:
      type: object
      properties:
        orderNumber:
          type: integer
          format: int32
          readOnly: true
      nullable: true
    Object:
      type: object
      nullable: true
    ShipOrderCommand:
      type: object
      properties:
        orderNumber:
          type: integer
          format: int32
          readOnly: true
      nullable: true
    Orderitem:
      type: object
      properties:
        productname:
          type: string
          nullable: true
        units:
          type: integer
          format: int32
        unitprice:
          type: number
          format: double
        pictureurl:
          type: string
          nullable: true
      nullable: true
    Order:
      type: object
      properties:
        ordernumber:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        status:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        orderitems:
          type: array
          items:
            "$ref": "#/components/schemas/Orderitem"
          nullable: true
        total:
          type: number
          format: double
      nullable: true
    OrderSummary:
      type: object
      properties:
        ordernumber:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        status:
          type: string
          nullable: true
        total:
          type: number
          format: double
      nullable: true
    CardType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      nullable: true
    BasketItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        oldUnitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      nullable: true
    CreateOrderDraftCommand:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            "$ref": "#/components/schemas/BasketItem"
          nullable: true
          readOnly: true
      nullable: true
    OrderItemDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        discount:
          type: number
          format: double
        units:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      nullable: true
    OrderDraftDTO:
      type: object
      properties:
        orderItems:
          type: array
          items:
            "$ref": "#/components/schemas/OrderItemDTO"
          nullable: true
        total:
          type: number
          format: double
      nullable: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://localhost:5105/connect/authorize
          tokenUrl: http://localhost:5105/connect/token
          scopes:
            orders: Ordering API
