openapi: 3.0.1
info:
  title: eShopOnContainers - Basket HTTP API
  description: The Basket Service HTTP API
  version: v1
paths:
  "/v1/basket/{id}":
    get:
      tags:
      - Basket
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CustomerBasket"
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomerBasket"
            text/json:
              schema:
                "$ref": "#/components/schemas/CustomerBasket"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - basketapi
    delete:
      tags:
      - Basket
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - basketapi
  "/v1/basket":
    post:
      tags:
      - Basket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CustomerBasket"
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomerBasket"
          text/json:
            schema:
              "$ref": "#/components/schemas/CustomerBasket"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CustomerBasket"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CustomerBasket"
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomerBasket"
            text/json:
              schema:
                "$ref": "#/components/schemas/CustomerBasket"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - basketapi
  "/v1/basket/checkout":
    post:
      tags:
      - Basket
      parameters:
      - name: x-requestid
        in: header
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/BasketCheckout"
          application/json:
            schema:
              "$ref": "#/components/schemas/BasketCheckout"
          text/json:
            schema:
              "$ref": "#/components/schemas/BasketCheckout"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/BasketCheckout"
      responses:
        '202':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
          - basketapi
components:
  schemas:
    BasketItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        oldUnitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      nullable: true
    CustomerBasket:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
        items:
          type: array
          items:
            "$ref": "#/components/schemas/BasketItem"
          nullable: true
      nullable: true
    BasketCheckout:
      type: object
      properties:
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        cardNumber:
          type: string
          nullable: true
        cardHolderName:
          type: string
          nullable: true
        cardExpiration:
          type: string
          format: date-time
        cardSecurityNumber:
          type: string
          nullable: true
        cardTypeId:
          type: integer
          format: int32
        buyer:
          type: string
          nullable: true
        requestId:
          type: string
          format: uuid
      nullable: true
    Object:
      type: object
      nullable: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://localhost:5105/connect/authorize
          tokenUrl: http://localhost:5105/connect/token
          scopes:
            basket: Basket API
