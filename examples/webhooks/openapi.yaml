openapi: 3.0.1
info:
  title: eShopOnContainers - Webhooks HTTP API
  description: The Webhooks Microservice HTTP API. This is a simple webhooks CRUD
    registration entrypoint
  version: v1
paths:
  "/v1/webhooks":
    get:
      tags:
      - Webhooks
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WebhookSubscription"
                nullable: true
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WebhookSubscription"
                nullable: true
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WebhookSubscription"
                nullable: true
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - webhooksapi
    post:
      tags:
      - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebhookSubscriptionRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/WebhookSubscriptionRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/WebhookSubscriptionRequest"
      callbacks:
        catalogItemPriceChange:
          '{$request.body#/url}':
            post:
              requestBody:
                schema:
                  type: object
                  properties:
                    when:
                      type: string
                      format: date-time
                    payload:
                      type: string
                    type:
                      type: string
                      const: "CatalogItemPriceChange"
              responses:
                '200':
                  description: success
        orderShipped:
          '{$request.body#/url}':
            post:
              requestBody:
                schema:
                  type: object
                  properties:
                    when:
                      type: string
                      format: date-time
                    payload:
                      type: string
                    type:
                      type: string
                      const: "OrderShipped"
              responses:
                '200':
                  description: success
        orderPaid:
          '{$request.body#/url}':
            post:
              requestBody:
                schema:
                  type: object
                  properties:
                    when:
                      type: string
                      format: date-time
                    payload:
                      type: string
                    type:
                      type: string
                      const: "OrderPaid"
              responses:
                '200':
                  description: success
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '418':
          description: Client Error
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
      security:
      - oauth2:
        - webhooksapi
  "/v1/webhooks/{id}":
    get:
      tags:
      - Webhooks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WebhookSubscription"
            application/json:
              schema:
                "$ref": "#/components/schemas/WebhookSubscription"
            text/json:
              schema:
                "$ref": "#/components/schemas/WebhookSubscription"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
      security:
      - oauth2:
        - webhooksapi
    delete:
      tags:
      - Webhooks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '202':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
      security:
      - oauth2:
        - webhooksapi
components:
  schemas:
    WebhookType:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    WebhookSubscription:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          "$ref": "#/components/schemas/WebhookType"
        date:
          type: string
          format: date-time
        destUrl:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
      nullable: true
    WebhookSubscriptionRequest:
      type: object
      properties:
        url:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        event:
          type: string
          nullable: true
        grantUrl:
          type: string
          nullable: true
      nullable: true
    Object:
      type: object
      nullable: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://localhost:5105/connect/authorize
          tokenUrl: http://localhost:5105/connect/token
          scopes:
            webhooks: Webhooks API
