openapi: 3.0.1
info:
  title: Shopping Aggregator for Web Clients
  description: Shopping Aggregator for Web Clients
  version: v1
paths:
  "/v1/basket":
    post:
      tags:
      - Basket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/BasketData"
            application/json:
              schema:
                "$ref": "#/components/schemas/BasketData"
            text/json:
              schema:
                "$ref": "#/components/schemas/BasketData"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - Microsoft.eShopOnContainers.Web.Shopping.HttpAggregator
    put:
      tags:
      - Basket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketRequest"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/BasketData"
            application/json:
              schema:
                "$ref": "#/components/schemas/BasketData"
            text/json:
              schema:
                "$ref": "#/components/schemas/BasketData"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - Microsoft.eShopOnContainers.Web.Shopping.HttpAggregator
  "/v1/basket/items":
    put:
      tags:
      - Basket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketItemsRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketItemsRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketItemsRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketItemsRequest"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/BasketData"
            application/json:
              schema:
                "$ref": "#/components/schemas/BasketData"
            text/json:
              schema:
                "$ref": "#/components/schemas/BasketData"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - Microsoft.eShopOnContainers.Web.Shopping.HttpAggregator
    post:
      tags:
      - Basket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AddBasketItemRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/AddBasketItemRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/AddBasketItemRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AddBasketItemRequest"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - Microsoft.eShopOnContainers.Web.Shopping.HttpAggregator
  "/":
    get:
      tags:
      - Home
      responses:
        '200':
          description: Success
  "/v1/order/draft/{basketId}":
    get:
      tags:
      - Order
      parameters:
      - name: basketId
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/OrderData"
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderData"
            text/json:
              schema:
                "$ref": "#/components/schemas/OrderData"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            application/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
            text/json:
              schema:
                "$ref": "../standard/rest-types.yaml#/definitions/error"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - Microsoft.eShopOnContainers.Web.Shopping.HttpAggregator
components:
  schemas:
    UpdateBasketRequestItemData:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
      nullable: true
    UpdateBasketRequest:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
        items:
          type: array
          items:
            "$ref": "#/components/schemas/UpdateBasketRequestItemData"
          nullable: true
      nullable: true
    Object:
      type: object
      nullable: true
    BasketDataItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        oldUnitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      nullable: true
    BasketData:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
        items:
          type: array
          items:
            "$ref": "#/components/schemas/BasketDataItem"
          nullable: true
      nullable: true
    UpdateBasketItemData:
      type: object
      properties:
        basketItemId:
          type: string
          nullable: true
        newQty:
          type: integer
          format: int32
      nullable: true
    UpdateBasketItemsRequest:
      type: object
      properties:
        basketId:
          type: string
          nullable: true
        updates:
          type: array
          items:
            "$ref": "#/components/schemas/UpdateBasketItemData"
          nullable: true
      nullable: true
    AddBasketItemRequest:
      type: object
      properties:
        catalogItemId:
          type: integer
          format: int32
        basketId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
      nullable: true
    OrderItemData:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        discount:
          type: number
          format: double
        units:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      nullable: true
    OrderData:
      type: object
      properties:
        orderNumber:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        status:
          type: string
          nullable: true
        total:
          type: number
          format: double
        description:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        cardNumber:
          type: string
          nullable: true
        cardHolderName:
          type: string
          nullable: true
        isDraft:
          type: boolean
        cardExpiration:
          type: string
          format: date-time
        cardExpirationShort:
          type: string
          nullable: true
        cardSecurityNumber:
          type: string
          nullable: true
        cardTypeId:
          type: integer
          format: int32
        buyer:
          type: string
          nullable: true
        orderItems:
          type: array
          items:
            "$ref": "#/components/schemas/OrderItemData"
          nullable: true
          readOnly: true
      nullable: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://localhost:5105/connect/authorize
          tokenUrl: http://localhost:5105/connect/token
          scopes:
            webshoppingagg: Shopping Aggregator for Web Clients
